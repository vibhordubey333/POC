# GraphQL schema example
#
# https://gqlgen.com/getting-started/


type Question{
    id: String!
    question_text: String!
    pub_date: String!
    choices: [Choice]
}

type Choice{
    id: String!
    question: Question!
    question_id: String!
    choice_text: String!
}

type Query {
    question: [Question]!
    choices: [Choice]!
}

input QuestionInput {
    question_text: String!
    pub_date: String!
}

input ChoiceInput {
    question_id: String!
    choice_text: String!
}

type Mutation {
    createQuestion(input: QuestionInput!): Question!
    createChoice(input: ChoiceInput): Choice!
}



#type Quiz{
#    items: [Question]
#    total: Int
#    pageLimit: Int
#    pageOffSet: Int
#}
#
#type Question{
#    id: String!
#    question_text: String!
#    pub_date: String!
#    choices: [Choice]
#}
#
#type Choice{
#    id: String!
#    question: Question!
#    question_id: String
#    choice_text: String!
#}
#
#type Query{
#    questions: [Question]!
#    choices: [Choice]!
#}
#
#input QuestionInput{
#    question_text: String!
#    pub_date: String!
#}
#
#input ChoiceInput{
#    question_id: String!
#    choice_text: String!
#}
#
#type Mutation{
#    createQuestion(input: QuestionInput!): Question!
#    createChoice(input: ChoiceInput): Choice!
#}
#
input QuestionFilterGroup{
    filterParam:QuizFilterParam
    value:Any
    key:QuizFilter
    fieldOperation:FieldOperation
}
#
enum FieldOperation {
    id
}
#
enum QuizFilter {
    id
}

input QuizSort{
    field: QuizSortKey!
    order: SORT_ORDER!
}

enum QuizFilterParam{
    id
}

enum QuizSortKey{
    id
}

enum SORT_ORDER{
    desc
    asc
}

input Limit{
    size: Int!
    offset: Int!
}

scalar Any